// <auto-generated />
using System;
using EntityFrameworkVsDapper.Benchmark.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EntityFrameworkVsDapper.Benchmark.EntityFramework.Migrations
{
    [DbContext(typeof(BenchmarkDbContext))]
    [Migration("20240110153624_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EntityFrameworkVsDapper.Benchmark.Core.Entities.Benches", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Cost")
                        .HasColumnType("integer")
                        .HasColumnName("cost");

                    b.Property<DateTime>("CreatedDateUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date_utc");

                    b.Property<int>("Depth")
                        .HasColumnType("integer")
                        .HasColumnName("depth");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("Height")
                        .HasColumnType("integer")
                        .HasColumnName("height");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer")
                        .HasColumnName("material_id");

                    b.Property<DateTime?>("ModifiedDateUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_date_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("StyleId")
                        .HasColumnType("integer")
                        .HasColumnName("style_id");

                    b.Property<int>("Width")
                        .HasColumnType("integer")
                        .HasColumnName("width");

                    b.HasKey("Id")
                        .HasName("pk_benches");

                    b.HasIndex("Id")
                        .HasDatabaseName("ix_benches_id");

                    b.HasIndex("MaterialId")
                        .HasDatabaseName("ix_benches_material_id");

                    b.HasIndex("StyleId")
                        .HasDatabaseName("ix_benches_style_id");

                    b.ToTable("benches", (string)null);
                });

            modelBuilder.Entity("EntityFrameworkVsDapper.Benchmark.Core.Entities.Brands", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date_utc");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime?>("ModifiedDateUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_date_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_brands");

                    b.HasIndex("Id")
                        .HasDatabaseName("ix_brands_id");

                    b.ToTable("brands", (string)null);
                });

            modelBuilder.Entity("EntityFrameworkVsDapper.Benchmark.Core.Entities.Materials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Cost")
                        .HasColumnType("integer")
                        .HasColumnName("cost");

                    b.Property<DateTime>("CreatedDateUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date_utc");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime?>("ModifiedDateUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_date_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_materials");

                    b.HasIndex("Id")
                        .HasDatabaseName("ix_materials_id");

                    b.ToTable("materials", (string)null);
                });

            modelBuilder.Entity("EntityFrameworkVsDapper.Benchmark.Core.Entities.Styles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("integer")
                        .HasColumnName("brand_id");

                    b.Property<DateTime>("CreatedDateUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date_utc");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime?>("ModifiedDateUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_date_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_styles");

                    b.HasIndex("BrandId")
                        .HasDatabaseName("ix_styles_brand_id");

                    b.HasIndex("Id")
                        .HasDatabaseName("ix_styles_id");

                    b.ToTable("styles", (string)null);
                });

            modelBuilder.Entity("EntityFrameworkVsDapper.Benchmark.Core.Entities.Benches", b =>
                {
                    b.HasOne("EntityFrameworkVsDapper.Benchmark.Core.Entities.Materials", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_benches_materials_material_id");

                    b.HasOne("EntityFrameworkVsDapper.Benchmark.Core.Entities.Styles", "Style")
                        .WithMany()
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_benches_styles_style_id");

                    b.Navigation("Material");

                    b.Navigation("Style");
                });

            modelBuilder.Entity("EntityFrameworkVsDapper.Benchmark.Core.Entities.Styles", b =>
                {
                    b.HasOne("EntityFrameworkVsDapper.Benchmark.Core.Entities.Brands", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_styles_brands_brand_id");

                    b.Navigation("Brand");
                });
#pragma warning restore 612, 618
        }
    }
}
